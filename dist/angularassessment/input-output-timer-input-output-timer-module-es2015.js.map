{"version":3,"sources":["./src/app/input-output-timer/counter-status/counter-status.component.ts","./src/app/input-output-timer/counter-status/counter-status.component.html","./src/app/input-output-timer/display/display.component.ts","./src/app/input-output-timer/display/display.component.html","./src/app/input-output-timer/forms/forms.component.ts","./src/app/input-output-timer/forms/forms.component.html","./src/app/input-output-timer/input-output-timer-routing.module.ts","./src/app/input-output-timer/input-output-timer.component.ts","./src/app/input-output-timer/input-output-timer.component.html","./src/app/input-output-timer/input-output-timer.module.ts","./src/app/input-output-timer/logger/logger.component.ts","./src/app/input-output-timer/logger/logger.component.html"],"names":[],"mappings":"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","file":"input-output-timer-input-output-timer-module-es2015.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-counter-status',\n  templateUrl: './counter-status.component.html',\n  styleUrls: ['./counter-status.component.scss'],\n})\nexport class CounterStatusComponent implements OnInit {\n  @Input() startCount: number;\n  @Input() pausedCount: number;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"columns\">\n  <div class=\"column\">\n    <p class=\"heading\">Resume count</p>\n    <p class=\"title is-size-1\">{{ startCount }}</p>\n  </div>\n  <div class=\"column\">\n    <p class=\"heading\">Pause count</p>\n    <p class=\"title is-size-1\">{{ pausedCount }}</p>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.scss'],\n})\nexport class DisplayComponent implements OnInit {\n  @Input() timerLimit: number;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div>\n  <p class=\"heading\">Count Down Timer</p>\n  <p class=\"title is-size-1\">{{ timerLimit }}</p>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.scss'],\n})\nexport class FormsComponent implements OnInit {\n  timerLimit: number;\n  startCount: number;\n  pausedCount: number;\n  pausedTime: number[];\n  startTime: string;\n  timerInterval: any;\n  isTimerStart: boolean;\n  inputText: string;\n  @Output() emitTimerValue: EventEmitter<number> = new EventEmitter<number>();\n  @Output() emitStartCount: EventEmitter<number> = new EventEmitter<number>();\n  @Output() emitPausedCount: EventEmitter<number> = new EventEmitter<number>();\n  @Output() emitStartTime: EventEmitter<string> = new EventEmitter<string>();\n  @Output() emitResetStartLogs: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor() {\n    this.timerLimit = 0;\n    this.startCount = 0;\n    this.pausedCount = 0;\n    this.isTimerStart = false;\n    this.pausedTime = [];\n    this.startTime = '';\n    this.inputText = '';\n  }\n\n  ngOnInit(): void {}\n\n  setInput(event: any) {\n    this.timerLimit = event.target.value;\n    this.inputText = '';\n    this.setToInitialState();\n  }\n\n  handleButton() {\n    if (this.timerLimit > 0) {\n      this.inputText = '';\n      this.isTimerStart = !this.isTimerStart;\n      if (this.isTimerStart) {\n        this.startCount = this.startCount + 1;\n        this.emitStartCount.emit(this.startCount);\n        this.startTime = new Date().toString();\n        this.emitStartTime.emit(this.startTime);\n        this.emitResetStartLogs.emit(false);\n        this.timerInterval = setInterval(() => {\n          if (this.timerLimit === 0) {\n            clearInterval(this.timerInterval);\n            this.IsStartVisible();\n            this.isTimerStart = false;\n          }\n          this.emitTimerValue.emit(this.timerLimit);\n          this.timerLimit = this.timerLimit - 1;\n        }, 1000);\n      } else {\n        this.pausedCount = this.pausedCount + 1;\n        this.emitPausedCount.emit(this.pausedCount);\n        this.emitResetStartLogs.emit(false);\n        this.pausedTime.push(this.timerLimit + 1);\n        clearInterval(this.timerInterval);\n      }\n    }\n  }\n\n  handleReset(): void {\n    this.timerLimit = 0;\n    this.setToInitialState();\n  }\n\n  IsStartVisible(): boolean {\n    if (this.timerLimit < 0) {\n      return true;\n    } else if (this.isTimerStart) {\n      return false;\n    }\n    return true;\n  }\n\n  setToInitialState(): void {\n    this.pausedTime = [];\n    this.startCount = 0;\n    this.pausedCount = 0;\n    this.isTimerStart = false;\n    this.emitTimerValue.emit(0);\n    this.emitStartCount.emit(this.startCount);\n    this.emitPausedCount.emit(this.pausedCount);\n    this.emitResetStartLogs.emit(true);\n    clearInterval(this.timerInterval);\n  }\n}\n","<div class=\"field has-addons\">\n  <div class=\"control\">\n    <input class=\"input\" type=\"number\" placeholder=\"Timer Limit\" id=\"timer\" (input)=\"setInput($event)\" [(ngModel)]=\"inputText\" />\n  </div>\n  <div class=\"control\">\n    <button (click)=\"handleButton()\" class=\"button is-info\">\n      {{ IsStartVisible() ? \"Start\" : \"Pause\" }}\n    </button>\n  </div>\n</div>\n<div class=\"container mb-3\">\n  <button class=\"button is-danger is-outlined\" (click)=\"handleReset()\">\n    Reset\n  </button>\n</div>\n\n<div *ngIf=\"pausedTime.length > 0\">\n  <h1 class=\"subtitle\">Logs</h1>\n  <div *ngFor=\"let time of pausedTime\">Paused at {{ time }}</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { InputOutputTimerComponent } from './input-output-timer.component';\n\nconst routes: Routes = [{ path: '', component: InputOutputTimerComponent }];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n})\nexport class InputOutputTimerRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-input-output-timer',\n  templateUrl: './input-output-timer.component.html',\n  styleUrls: ['./input-output-timer.component.scss'],\n})\nexport class InputOutputTimerComponent implements OnInit {\n  timerLimit: number;\n  startCount: number;\n  pausedCount: number;\n  startTime: string;\n  resetStartLog: boolean;\n\n  constructor() {\n    this.timerLimit = 0;\n    this.startCount = 0;\n    this.pausedCount = 0;\n    this.startTime = '';\n    this.resetStartLog = false;\n  }\n\n  ngOnInit(): void {}\n\n  setTimerLimit(timer: number) {\n    this.timerLimit = timer;\n  }\n\n  setStartCount(count: number) {\n    this.startCount = count;\n  }\n\n  setPausedCount(count: number) {\n    this.pausedCount = count;\n  }\n\n  setStartTime(startTime: string) {\n    this.startTime = startTime;\n  }\n\n  resetStartLogs(status: boolean) {\n    this.resetStartLog = status;\n  }\n}\n","<app-navigation></app-navigation>\n<hr class=\"divider mt-0 mb-0\" />\n<section class=\"section\">\n  <div class=\"container\">\n    <h1 class=\"title is-size-3 has-text-grey is-family-secondary mb-5\">\n      Timer [I/O Decorator]\n    </h1>\n  </div>\n  <div class=\"container\">\n    <div class=\"tile is-ancestor\">\n      <div class=\"tile\">\n        <div class=\"tile is-parent\">\n          <div class=\"tile is-child box\">\n            <p class=\"title\">Gauge</p>\n            <hr class=\"divider mt-0\" />\n            <app-forms\n              (emitTimerValue)=\"setTimerLimit($event)\"\n              (emitStartCount)=\"setStartCount($event)\"\n              (emitPausedCount)=\"setPausedCount($event)\"\n              (emitStartTime)=\"setStartTime($event)\"\n              (emitResetStartLogs)=\"resetStartLogs($event)\"\n            ></app-forms>\n          </div>\n        </div>\n        <div class=\"tile is-parent\">\n          <div class=\"tile is-child box\">\n            <p class=\"title\">Display</p>\n            <hr class=\"divider mt-0\" />\n            <app-display [timerLimit]=\"timerLimit\"></app-display>\n          </div>\n        </div>\n      </div>\n      <div class=\"tile is-parent is-vertical\">\n        <div class=\"tile box is-child\">\n          <p class=\"title\">Counter</p>\n          <hr class=\"divider mt-0\" />\n          <app-counter-status\n            [startCount]=\"startCount\"\n            [pausedCount]=\"pausedCount\"\n          ></app-counter-status>\n        </div>\n        <div class=\"tile box is-child\">\n          <p class=\"title\">Controller</p>\n          <hr class=\"divider mt-0\" />\n          <app-logger\n            [startTime]=\"startTime\"\n            [resetStartLog]=\"resetStartLog\"\n          ></app-logger>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { InputOutputTimerRoutingModule } from './input-output-timer-routing.module';\nimport { InputOutputTimerComponent } from './input-output-timer.component';\nimport { DisplayComponent } from './display/display.component';\nimport { FormsComponent } from './forms/forms.component';\nimport { LoggerComponent } from './logger/logger.component';\nimport { CounterStatusComponent } from './counter-status/counter-status.component';\nimport { NavigationModule } from '../navigation/navigation.module';\n\n@NgModule({\n  imports: [CommonModule, InputOutputTimerRoutingModule, FormsModule, NavigationModule],\n  declarations: [InputOutputTimerComponent, DisplayComponent, FormsComponent, LoggerComponent, CounterStatusComponent],\n})\nexport class InputOutputTimerModule {}\n","import {\n  Component,\n  OnInit,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-logger',\n  templateUrl: './logger.component.html',\n  styleUrls: ['./logger.component.scss'],\n})\nexport class LoggerComponent implements OnInit, OnChanges {\n  @Input() startTime: string;\n  @Input() resetStartLog: boolean;\n  startList: string[];\n  constructor() {\n    this.startList = [];\n  }\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.resetStartLog && changes.resetStartLog.currentValue) {\n      this.startList.length = 0;\n    }\n    if (changes.startTime && changes.startTime.currentValue) {\n      this.startList.push(changes.startTime.currentValue);\n    }\n  }\n}\n","<div class=\"\">\n  <div *ngIf=\"startList.length > 0\">\n    <h2 class=\"subtitle\">Logs</h2>\n    <div *ngFor=\"let time of startList\">\n      Started at {{ time | date: \"dd-mm-yyyy hh:mm:ss a\" }}\n    </div>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}