{"version":3,"sources":["webpack:///src/app/input-output-timer/counter-status/counter-status.component.ts","webpack:///src/app/input-output-timer/counter-status/counter-status.component.html","webpack:///src/app/input-output-timer/display/display.component.ts","webpack:///src/app/input-output-timer/display/display.component.html","webpack:///src/app/input-output-timer/forms/forms.component.ts","webpack:///src/app/input-output-timer/forms/forms.component.html","webpack:///src/app/input-output-timer/input-output-timer-routing.module.ts","webpack:///src/app/input-output-timer/input-output-timer.component.ts","webpack:///src/app/input-output-timer/input-output-timer.component.html","webpack:///src/app/input-output-timer/input-output-timer.module.ts","webpack:///src/app/input-output-timer/logger/logger.component.ts","webpack:///src/app/input-output-timer/logger/logger.component.html"],"names":["CounterStatusComponent","selector","templateUrl","styleUrls","DisplayComponent","FormsComponent","emitTimerValue","emitStartCount","emitPausedCount","emitStartTime","emitResetStartLogs","timerLimit","startCount","pausedCount","isTimerStart","pausedTime","startTime","event","target","value","setToInitialState","emit","Date","toString","timerInterval","setInterval","clearInterval","IsStartVisible","push","setInput","handleButton","handleReset","routes","path","component","InputOutputTimerRoutingModule","forChild","exports","imports","InputOutputTimerComponent","resetStartLog","timer","count","status","setTimerLimit","setStartCount","setPausedCount","setStartTime","resetStartLogs","InputOutputTimerModule","declarations","LoggerComponent","startList","changes","currentValue","length"],"mappings":"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","file":"input-output-timer-input-output-timer-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-counter-status',\n  templateUrl: './counter-status.component.html',\n  styleUrls: ['./counter-status.component.scss'],\n})\nexport class CounterStatusComponent implements OnInit {\n  @Input() startCount: number;\n  @Input() pausedCount: number;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"main\">\n  <div class=\"main_count\">{{ startCount }}</div>\n  <div style=\"font-size: 3rem;\"><strong>Started</strong></div>\n  <div class=\"main_count\">{{ pausedCount }}</div>\n  <div style=\"font-size: 3rem;\"><strong>Paused</strong></div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.scss'],\n})\nexport class DisplayComponent implements OnInit {\n  @Input() timerLimit: number;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"main\">\n  <h4>Count Down Timer</h4>\n  <h3>{{ timerLimit }}</h3>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.scss'],\n})\nexport class FormsComponent implements OnInit {\n  timerLimit: number;\n  startCount: number;\n  pausedCount: number;\n  pausedTime: number[];\n  startTime: string;\n  timerInterval: any;\n  isTimerStart: boolean;\n  @Output() emitTimerValue: EventEmitter<number> = new EventEmitter<number>();\n  @Output() emitStartCount: EventEmitter<number> = new EventEmitter<number>();\n  @Output() emitPausedCount: EventEmitter<number> = new EventEmitter<number>();\n  @Output() emitStartTime: EventEmitter<string> = new EventEmitter<string>();\n  @Output() emitResetStartLogs: EventEmitter<boolean> = new EventEmitter<\n    boolean\n  >();\n\n  constructor() {\n    this.timerLimit = 0;\n    this.startCount = 0;\n    this.pausedCount = 0;\n    this.isTimerStart = false;\n    this.pausedTime = [];\n    this.startTime = '';\n  }\n\n  ngOnInit(): void {}\n\n  setInput(event: any) {\n    this.timerLimit = event.target.value;\n    this.setToInitialState();\n  }\n\n  handleButton() {\n    if (this.timerLimit > 0) {\n      this.isTimerStart = !this.isTimerStart;\n      if (this.isTimerStart) {\n        this.startCount = this.startCount + 1;\n        this.emitStartCount.emit(this.startCount);\n        this.startTime = new Date().toString();\n        this.emitStartTime.emit(this.startTime);\n        this.emitResetStartLogs.emit(false);\n        this.timerInterval = setInterval(() => {\n          if (this.timerLimit === 0) {\n            clearInterval(this.timerInterval);\n            this.IsStartVisible();\n            this.isTimerStart = false;\n          }\n          this.emitTimerValue.emit(this.timerLimit);\n          this.timerLimit = this.timerLimit - 1;\n        }, 1000);\n      } else {\n        this.pausedCount = this.pausedCount + 1;\n        this.emitPausedCount.emit(this.pausedCount);\n        this.emitResetStartLogs.emit(false);\n        this.pausedTime.push(this.timerLimit + 1);\n        clearInterval(this.timerInterval);\n      }\n    }\n  }\n\n  handleReset(): void {\n    this.timerLimit = 0;\n    this.setToInitialState();\n  }\n\n  IsStartVisible(): boolean {\n    if (this.timerLimit < 0) {\n      return true;\n    } else if (this.isTimerStart) {\n      return false;\n    }\n    return true;\n  }\n\n  setToInitialState(): void {\n    this.pausedTime = [];\n    this.startCount = 0;\n    this.pausedCount = 0;\n    this.emitTimerValue.emit(0);\n    this.emitStartCount.emit(this.startCount);\n    this.emitPausedCount.emit(this.pausedCount);\n    this.emitResetStartLogs.emit(true);\n    clearInterval(this.timerInterval);\n  }\n}\n","<div class=\"input-group forms\">\n  <label for=\"timer\">Timer Limit</label>\n  <input type=\"number\" class=\"form-control\" placeholder=\"Enter timer limit\" id=\"timer\" aria-describedby=\"basic-addon1\" (input)=\"setInput($event)\" />\n</div>\n\n<div class=\"buttonStyle\">\n  <button class=\"btn btn-primary\" style=\"margin-right: 2rem;\" (click)=\"handleButton()\">\n    {{ IsStartVisible() ? \"Start\" : \"Pause\" }}\n  </button>\n\n  <button class=\"btn btn-info\" (click)=\"handleReset()\">Reset</button>\n</div>\n\n<div *ngIf=\"pausedTime.length > 0\" class=\"pauseContent\">\n  <div *ngFor=\"let time of pausedTime\">Paused at {{ time }}</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { InputOutputTimerComponent } from './input-output-timer.component';\n\nconst routes: Routes = [{ path: '', component: InputOutputTimerComponent }];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n})\nexport class InputOutputTimerRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-input-output-timer',\n  templateUrl: './input-output-timer.component.html',\n  styleUrls: ['./input-output-timer.component.scss'],\n})\nexport class InputOutputTimerComponent implements OnInit {\n  timerLimit: number;\n  startCount: number;\n  pausedCount: number;\n  startTime: string;\n  resetStartLog: boolean;\n\n  constructor() {\n    this.timerLimit = 0;\n    this.startCount = 0;\n    this.pausedCount = 0;\n    this.startTime = '';\n    this.resetStartLog = false;\n  }\n\n  ngOnInit(): void {}\n\n  setTimerLimit(timer: number) {\n    this.timerLimit = timer;\n  }\n\n  setStartCount(count: number) {\n    this.startCount = count;\n  }\n\n  setPausedCount(count: number) {\n    this.pausedCount = count;\n  }\n\n  setStartTime(startTime: string) {\n    this.startTime = startTime;\n  }\n\n  resetStartLogs(status: boolean) {\n    this.resetStartLog = status;\n  }\n}\n","<div class=\"main\">\n  <h2>Timer Using Input and Output Decorator</h2>\n  <hr />\n  <div class=\"row\">\n    <div class=\"col-md-4 main_display\">\n      <app-display [timerLimit]=\"timerLimit\"></app-display>\n    </div>\n    <div class=\"col-md-6 main_form\">\n      <app-forms\n        (emitTimerValue)=\"setTimerLimit($event)\"\n        (emitStartCount)=\"setStartCount($event)\"\n        (emitPausedCount)=\"setPausedCount($event)\"\n        (emitStartTime)=\"setStartTime($event)\"\n        (emitResetStartLogs)=\"resetStartLogs($event)\"\n      ></app-forms>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-5 main_logger\">\n      <app-logger\n        [startTime]=\"startTime\"\n        [resetStartLog]=\"resetStartLog\"\n      ></app-logger>\n    </div>\n    <div class=\"col-md-5 main_counter\">\n      <app-counter-status\n        [startCount]=\"startCount\"\n        [pausedCount]=\"pausedCount\"\n      ></app-counter-status>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { InputOutputTimerRoutingModule } from './input-output-timer-routing.module';\nimport { InputOutputTimerComponent } from './input-output-timer.component';\nimport { DisplayComponent } from './display/display.component';\nimport { FormsComponent } from './forms/forms.component';\nimport { LoggerComponent } from './logger/logger.component';\nimport { CounterStatusComponent } from './counter-status/counter-status.component';\n\n@NgModule({\n  imports: [CommonModule, InputOutputTimerRoutingModule, FormsModule],\n  declarations: [\n    InputOutputTimerComponent,\n    DisplayComponent,\n    FormsComponent,\n    LoggerComponent,\n    CounterStatusComponent,\n  ],\n})\nexport class InputOutputTimerModule {}\n","import {\n  Component,\n  OnInit,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-logger',\n  templateUrl: './logger.component.html',\n  styleUrls: ['./logger.component.scss'],\n})\nexport class LoggerComponent implements OnInit, OnChanges {\n  @Input() startTime: string;\n  @Input() resetStartLog: boolean;\n  startList: string[];\n  constructor() {\n    this.startList = [];\n  }\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.resetStartLog && changes.resetStartLog.currentValue) {\n      this.startList.length = 0;\n    }\n    if (changes.startTime && changes.startTime.currentValue) {\n      this.startList.push(changes.startTime.currentValue);\n    }\n  }\n}\n","<div class=\"logger\">\n  <h2>Started Logs</h2>\n  <div *ngIf=\"startList.length > 0\" class=\"logContent\">\n    <div *ngFor=\"let time of startList\">\n      Started at {{ time | date: \"dd-mm-yyyy hh:mm:ss a\" }}\n    </div>\n  </div>\n</div>\n"]}