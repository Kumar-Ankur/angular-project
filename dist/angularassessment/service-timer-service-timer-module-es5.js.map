{"version":3,"sources":["webpack:///src/app/service-timer/counter-status/counter-status.component.ts","webpack:///src/app/service-timer/counter-status/counter-status.component.html","webpack:///src/app/service-timer/display/display.component.ts","webpack:///src/app/service-timer/display/display.component.html","webpack:///src/app/service-timer/forms/forms.component.ts","webpack:///src/app/service-timer/forms/forms.component.html","webpack:///src/app/service-timer/logger/logger.component.ts","webpack:///src/app/service-timer/logger/logger.component.html","webpack:///src/app/service-timer/service-timer-routing.module.ts","webpack:///src/app/service-timer/service-timer.component.ts","webpack:///src/app/service-timer/service-timer.component.html","webpack:///src/app/service-timer/service-timer.module.ts","webpack:///src/app/service-timer/service-timer.service.ts"],"names":["CounterStatusComponent","timerService","startCount","pausedCount","setStartCountValue","subscribe","value","setPausedCountValue","selector","templateUrl","styleUrls","DisplayComponent","timerValue","setTimerValue","FormsComponent","inputText","isTimerStart","pausedTime","startTime","event","target","setToInitialState","next","Date","toString","setStartTime","emitResetStartLogs","timerInterval","setInterval","clearInterval","IsStartVisible","push","onSelectedInput","handleStartPause","handleReset","LoggerComponent","startList","reset","time","routes","path","component","ServiceTimerRoutingModule","forChild","exports","imports","ServiceTimerComponent","ServiceTimerModule","declarations","TimerService","providedIn"],"mappings":"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","file":"service-timer-service-timer-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TimerService } from '../service-timer.service';\n\n@Component({\n  selector: 'app-counter-status',\n  templateUrl: './counter-status.component.html',\n  styleUrls: ['./counter-status.component.scss'],\n})\nexport class CounterStatusComponent implements OnInit {\n  startCount: number;\n  pausedCount: number;\n  constructor(private timerService: TimerService) {\n    this.startCount = 0;\n    this.pausedCount = 0;\n  }\n\n  ngOnInit(): void {\n    this.timerService.setStartCountValue.subscribe((value) => {\n      this.startCount = value;\n    });\n    this.timerService.setPausedCountValue.subscribe((value) => {\n      this.pausedCount = value;\n    });\n  }\n}\n","<div class=\"main\">\n  <div class=\"main_count\">{{ startCount }}</div>\n  <div style=\"font-size: 3rem;\"><strong>Started</strong></div>\n  <div class=\"main_count\">{{ pausedCount }}</div>\n  <div style=\"font-size: 3rem;\"><strong>Paused</strong></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TimerService } from '../service-timer.service';\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.scss'],\n})\nexport class DisplayComponent implements OnInit {\n  timerValue: number;\n  constructor(private timerService: TimerService) {\n    this.timerValue = 0;\n  }\n\n  ngOnInit(): void {\n    this.timerService.setTimerValue.subscribe((value) => {\n      this.timerValue = value;\n    });\n  }\n}\n","<div class=\"main\">\n  <h4>Count Down Timer</h4>\n  <h3>{{ timerValue }}</h3>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TimerService } from '../service-timer.service';\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.scss'],\n})\nexport class FormsComponent implements OnInit {\n  inputText: number;\n  isTimerStart: boolean;\n  startCount: number;\n  timerInterval: any;\n  pausedCount: number;\n  pausedTime: number[];\n  startTime: string;\n  constructor(private timerService: TimerService) {\n    this.inputText = 0;\n    this.isTimerStart = false;\n    this.startCount = 0;\n    this.pausedCount = 0;\n    this.pausedTime = [];\n    this.startTime = '';\n  }\n\n  ngOnInit(): void {}\n\n  onSelectedInput(event: any) {\n    this.inputText = event.target.value;\n    this.setToInitialState();\n  }\n\n  handleStartPause(): void {\n    if (this.inputText > 0) {\n      this.isTimerStart = !this.isTimerStart;\n      if (this.isTimerStart) {\n        this.startCount = this.startCount + 1;\n        this.timerService.setStartCountValue.next(this.startCount);\n        this.startTime = new Date().toString();\n        this.timerService.setStartTime.next(this.startTime);\n        this.timerService.emitResetStartLogs.next(false);\n        this.timerInterval = setInterval(() => {\n          if (this.inputText === 0) {\n            clearInterval(this.timerInterval);\n            this.IsStartVisible();\n            this.isTimerStart = false;\n          }\n          this.timerService.setTimerValue.next(+this.inputText);\n          this.inputText = this.inputText - 1;\n        }, 1000);\n      } else {\n        this.pausedCount = this.pausedCount + 1;\n        this.timerService.setPausedCountValue.next(this.pausedCount);\n        this.pausedTime.push(this.inputText + 1);\n        this.timerService.emitResetStartLogs.next(false);\n        clearInterval(this.timerInterval);\n      }\n    }\n  }\n  handleReset() {\n    this.inputText = 0;\n    this.setToInitialState();\n  }\n\n  IsStartVisible(): boolean {\n    if (this.inputText < 0) {\n      return true;\n    } else if (this.isTimerStart) {\n      return false;\n    }\n    return true;\n  }\n\n  setToInitialState(): void {\n    this.pausedTime = [];\n    this.startCount = 0;\n    this.pausedCount = 0;\n    this.timerService.setStartCountValue.next(this.startCount);\n    this.timerService.setPausedCountValue.next(this.pausedCount);\n    this.timerService.setTimerValue.next(0);\n    this.timerService.emitResetStartLogs.next(true);\n    this.isTimerStart = false;\n    clearInterval(this.timerInterval);\n  }\n}\n","<div class=\"input-group forms\">\n  <label for=\"timer\">Timer Limit</label>\n  <input\n    type=\"number\"\n    class=\"form-control\"\n    placeholder=\"Enter timer limit\"\n    id=\"timer\"\n    aria-describedby=\"basic-addon1\"\n    value=\"inputText\"\n    (input)=\"onSelectedInput($event)\"\n  />\n</div>\n\n<div class=\"buttonStyle\">\n  <button\n    class=\"btn btn-primary\"\n    style=\"margin-right: 2rem;\"\n    (click)=\"handleStartPause()\"\n  >\n    {{ IsStartVisible() ? \"Start\" : \"Pause\" }}\n  </button>\n\n  <button class=\"btn btn-info\" (click)=\"handleReset()\">Reset</button>\n</div>\n\n<div *ngIf=\"pausedTime.length > 0\" class=\"pauseContent\">\n  <div *ngFor=\"let time of pausedTime\">Paused at {{ time }}</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TimerService } from '../service-timer.service';\n\n@Component({\n  selector: 'app-logger',\n  templateUrl: './logger.component.html',\n  styleUrls: ['./logger.component.scss'],\n})\nexport class LoggerComponent implements OnInit {\n  startList: string[];\n  constructor(private timerService: TimerService) {\n    this.startList = [];\n  }\n\n  ngOnInit(): void {\n    this.timerService.emitResetStartLogs.subscribe((reset: boolean) => {\n      if (reset) {\n        this.startList = [];\n      }\n    });\n    this.timerService.setStartTime.subscribe((time: string) => {\n      this.startList.push(time);\n    });\n  }\n}\n","<div class=\"logger\">\n  <h2>Started Logs</h2>\n  <div *ngIf=\"startList.length > 0\" class=\"logContent\">\n    <div *ngFor=\"let time of startList\">\n      Started at {{ time | date: \"dd-mm-yyyy hh:mm:ss a\" }}\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ServiceTimerComponent } from './service-timer.component';\n\nconst routes: Routes = [{ path: '', component: ServiceTimerComponent }];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n})\nexport class ServiceTimerRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-service-timer',\n  templateUrl: './service-timer.component.html',\n  styleUrls: ['./service-timer.component.scss']\n})\nexport class ServiceTimerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main\">\n  <h2>Timer Using Service with Subject</h2>\n  <hr />\n  <div class=\"row\">\n    <div class=\"col-md-4 main_display\">\n      <app-display></app-display>\n    </div>\n    <div class=\"col-md-6 main_form\">\n      <app-forms></app-forms>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-5 main_logger\">\n      <app-logger></app-logger>\n    </div>\n    <div class=\"col-md-5 main_counter\">\n      <app-counter-status></app-counter-status>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ServiceTimerRoutingModule } from './service-timer-routing.module';\nimport { ServiceTimerComponent } from './service-timer.component';\nimport { CounterStatusComponent } from './counter-status/counter-status.component';\nimport { DisplayComponent } from './display/display.component';\nimport { FormsComponent } from './forms/forms.component';\nimport { LoggerComponent } from './logger/logger.component';\n\n@NgModule({\n  imports: [CommonModule, ServiceTimerRoutingModule],\n  declarations: [ServiceTimerComponent, CounterStatusComponent, DisplayComponent, FormsComponent, LoggerComponent],\n})\nexport class ServiceTimerModule {}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class TimerService {\n  setTimerValue = new Subject<number>();\n  setStartCountValue = new Subject<number>();\n  setPausedCountValue = new Subject<number>();\n  setStartTime = new Subject<string>();\n  emitResetStartLogs = new Subject<boolean>();\n}\n"]}